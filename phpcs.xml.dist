<?xml version="1.0"?>
<ruleset name="ClassicPress Coding Standards">
	<description>Apply WordPress Coding Standards to all Core files</description>

	<!-- Only scan PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
	<arg name="cache"/>

	<!-- Set the memory limit to 256M.
		 For most standard PHP configurations, this means the memory limit will temporarily be raised.
		 Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
	-->
	<ini name="memory_limit" value="256M"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Show sniff codes in all reports. -->
	<arg value="ps"/>

	<file>./</file>

	<rule ref="WordPress-Core"/>
	<rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>

	<!-- These rules are being set as warnings instead of errors, so we can error check the entire codebase. -->
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.DB.PreparedSQL.InterpolatedNotPrepared">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.DB.PreparedSQL.NotPrepared">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.PHP.YodaConditions">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.WP.I18n">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.DateTime.RestrictedFunctions">
		<type>warning</type>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.PHP.DisallowMultipleAssignments">
		<type>warning</type>
	</rule>

	<rule ref="WordPress.NamingConventions.ValidVariableName">
		<properties>
			<property name="allowed_custom_properties" type="array">
				<!-- From database structure queries. -->
				<element value="Collation"/>
				<element value="Column_name"/>
				<element value="Default"/>
				<element value="Extra"/>
				<element value="Field"/>
				<element value="Index_type"/>
				<element value="Key"/>
				<element value="Key_name"/>
				<element value="Msg_text"/>
				<element value="Non_unique"/>
				<element value="Null"/>
				<element value="Sub_part"/>
				<element value="Type"/>
				<!-- From plugin/theme data. -->
				<element value="authorAndUri"/>
				<element value="Name"/>
				<element value="Version"/>
				<!-- From the result of wp_xmlrpc_server::wp_getPageList(). -->
				<element value="dateCreated"/>

				<!-- From DOMDocument. -->
				<element value="childNodes"/>
				<element value="formatOutput"/>
				<element value="nodeName"/>
				<element value="nodeType"/>
				<element value="parentNode"/>
				<element value="preserveWhiteSpace"/>
				<element value="textContent"/>
				<!-- From PHPMailer. -->
				<element value="AltBody"/>
				<element value="Body"/>
				<element value="CharSet"/>
				<element value="ContentType"/>
				<element value="Encoding"/>
				<element value="Hostname"/>
				<element value="mailHeader"/>
				<element value="MIMEBody"/>
				<element value="MIMEHeader"/>
				<element value="Sender"/>
				<element value="Subject"/>
				<!-- From PHPUnit_Util_Getopt. -->
				<element value="longOptions"/>
				<!-- From POP3. -->
				<element value="ERROR"/>
				<!-- From ZipArchive. -->
				<element value="numFiles"/>
			</property>
		</properties>
	</rule>

	<rule ref="WordPress.PHP.NoSilencedErrors">
		<properties>
			<property name="customAllowedFunctionsList" type="array">
				<element value="ssh2_connect"/>
				<element value="ssh2_auth_password"/>
				<element value="ssh2_auth_pubkey_file"/>
				<element value="ftp_ssl_connect"/>
				<element value="ftp_connect"/>
				<element value="ftp_get_option"/>
				<element value="ftp_set_option"/>
				<element value="disk_free_space"/>
				<element value="getimagesize"/>
				<element value="iptcparse"/>
				<element value="exif_read_data"/>
				<element value="gzinflate"/>
				<element value="gzuncompress"/>
				<element value="gzdecode"/>
			</property>
		</properties>
	</rule>

	<!-- Enforce no parenthesis for language constructs, and only one space immediately after.
		 Including this rule is temporary until it is moved from the WordPress-Extra ruleset to
		 the WordPress-Core ruleset upstream.
	-->
	<rule ref="PEAR.Files.IncludingFile.BracketsNotRequired">
		<type>warning</type>
	</rule>
	<rule ref="PEAR.Files.IncludingFile.UseRequire">
		<type>warning</type>
	</rule>
	<rule ref="PEAR.Files.IncludingFile.UseRequireOnce">
		<type>warning</type>
	</rule>
	<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>

	<!-- Assignments in while conditions are a valid method of looping over iterables. -->
	<rule ref="Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition">
		<exclude-pattern>*</exclude-pattern>
	</rule>

</ruleset>
